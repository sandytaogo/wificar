C51 COMPILER V7.06   MAIN                                                                  12/14/2024 17:13:28 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: H:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /**
   2          * Copyright (C) wificar, Inc.
   3          * 主驱动控制程序，包含数字信号，模拟信号之间转换 波特率之间解陆饴虢饴
   4          * @author txf
   5          * @date 2020-04-12 12:12:12
   6          */
   7          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   8          #include "util.h"
   9          #include <math.h>
  10          sbit Trig  = P3^4; //雷达产生脉冲引脚
  11          sbit Echo  = P3^5; //接收雷达回波引脚
  12          sbit p1 = P1^0;
  13          sbit p2 = P1^1;
  14          uint switch_action = -1;
  15          /*****************声明函数开始***************/
  16          
  17          void init_com_port ( void );
  18          void drive_execute(uchar temp);
  19          /*****************声明函数结束***************/
  20          //*****************程序入口***************************************
  21          
  22          void init_com_port ( void ) {
  23   1              SCON = 0x50;    /*SCON:work mode 1,8-bit UART E:receive */
  24   1          TMOD |= 0x20;       /*TMOD time 1,mode 2 , 8-bit reload*/
  25   1         // PCON = 0x00;
  26   1              TH1 = 0xFd;    /*TH1: reload value for 9600 baud @ 11.0592MHZ 波特率*/
  27   1              //TL1 = 0xFd;
  28   1              TR1 = 1;                /*TR1 time 1 run*/
  29   1              EA = 1;  /*open Headquarters suspend*/
  30   1              ES = 1;  /*open com port suspend*/      
  31   1              //IT0=0;
  32   1              //EX0=1; 
  33   1      }
  34          
  35          /*********************外部中断0初始化**********************/
  36          void ex_init( void ) {
  37   1              IT0 = 1;//指定外部中断0下降沿触发，INT0 (P3.2
  38   1              EX0 = 1;//使能外部中断
  39   1              EA = 1; //开总中断
  40   1      }
  41          
  42          /********************定时器0初始化*************/
  43          void tim_init( void ) {
  44   1              TMOD = 0X02;//定时器0工作方式2，TH0是重装值，TL0是初值
  45   1              TH0=0x00; //重载值
  46   1              TL0=0x00; //初始化值
  47   1              ET0=1;    //开中断
  48   1              TR0=1; 
  49   1      }
  50          
  51          // 串口中断程序
  52          void com_port ( void ) interrupt 4 {
  53   1              unsigned char temp;
  54   1              if(RI) {
  55   2                      RI = 0;/*RI: flag reset*/
C51 COMPILER V7.06   MAIN                                                                  12/14/2024 17:13:28 PAGE 2   

  56   2                      temp = SBUF; /*receive value*/
  57   2                      drive_execute(temp); 
  58   2              }
  59   1      }
  60          
  61          void main ( void ) {
  62   1              uint index = 0;
  63   1              init_com_port();
  64   1              while (1) {
  65   2                      if(0 == switch_action){
  66   3                              p1 = 0;
  67   3                              delay(18);
  68   3                              p1 = 1; 
  69   3                              delay(2);
  70   3                      }else if(1 == switch_action){
  71   3                              p1 = 0;
  72   3                              delay(19);
  73   3                              p1 = 1; 
  74   3                              delay(1);
  75   3                      }else if(2 == switch_action){
  76   3                              p2 = 0;
  77   3                              delay(18);
  78   3                              p2 = 1; 
  79   3                              delay(2);
  80   3                      }else if(3 == switch_action){
  81   3                              p2 = 0;
  82   3                              delay(18.5);
  83   3                              p2 = 1; 
  84   3                              delay(1.5);
  85   3                      }
  86   2                      if(-1 != switch_action){
  87   3                              index++;
  88   3                      }
  89   2                      if(300<index) {
  90   3                              switch_action = -1;
  91   3                              index = 0 ;
  92   3                      }
  93   2                      p1 = 0;
  94   2                      p2 = 0;
  95   2              }               
  96   1      }
  97          
  98          void drive_execute (uchar direction) {
  99   1              P0 = direction;
 100   1              switch(direction){
 101   2                      case 'a':
 102   2                              P2 = 0X96;
 103   2                              delay(1000);
 104   2                              P2 = 0X00;
 105   2                      break;
 106   2                      case 'c':
 107   2                              P2 = 0X90;
 108   2                              delay(1000);
 109   2                              P2 = 0X00;
 110   2                      break;
 111   2                      case 'd':
 112   2                              P2 = 0X06;
 113   2                              delay(1000);
 114   2                              P2 = 0X00;
 115   2                      break;
 116   2                      case 'b':
 117   2                              P2 = 0X69;
C51 COMPILER V7.06   MAIN                                                                  12/14/2024 17:13:28 PAGE 3   

 118   2                              delay(1000);
 119   2                              P2 = 0X00;
 120   2                      break;
 121   2                      case 'e':
 122   2                              switch_action = 2;
 123   2                              delay(10);
 124   2                      break;
 125   2                      case '2':
 126   2                              switch_action = 3;
 127   2                              delay(10);
 128   2                      break;
 129   2                      case '1':
 130   2                              switch_action = 0;
 131   2                              delay(10);
 132   2                      break;
 133   2                      case '3':
 134   2                              switch_action = 1;
 135   2                              delay(10);
 136   2                      break;
 137   2              }
 138   1              P0 = 0XFF;
 139   1      }
 140          
 141          
 142          
 143          
 144          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
